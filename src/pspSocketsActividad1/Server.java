package pspSocketsActividad1;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;

/**
 *
 * @author Miguel
 */
public class Server {

    public static final int PORT = 8080;
    private static BankAccount acc = new BankAccount();

    public static void main(String[] args) throws IOException {
        ServerSocket server = new ServerSocket(PORT);
        Socket socket = null;
        System.out.println("Started: " + server);

        //Para que el server no se pare al terminar la comunicaci√≥n, 
        // simplemente metemos todo dentro de un whil true
        while (true) {
            try {
                // Blocked until a connection happens:
                socket = server.accept();
                System.out.println("Connection accepted: " + socket);
                BufferedReader input
                        = new BufferedReader(
                                new InputStreamReader(
                                        socket.getInputStream()));

                // The output usually is generated by a PrintWriter:
                PrintWriter output;
                output = new PrintWriter(
                        new BufferedWriter(
                                new OutputStreamWriter(
                                        socket.getOutputStream())), true);
                while (true) {
                    String str = input.readLine();
                    double cantidad = Double.parseDouble(str.split("-")[1]);
                    if (str.equals("END")) {
                        break;
                    } else if (str.startsWith("I")) {
                        acc.incrementarBalance(cantidad);
                    } else if (str.startsWith("R")) {
                        acc.decrementarBalance(cantidad);
                    }
                    System.out.println("Command executed: " + str);
                    System.out.println("Current balance: " + acc.getBalance());
                    output.println(acc.getBalance());

                }
                //Always close both sockets...
            } finally {
                System.out.println("Closing...");
                socket.close();
                //server.close();
            }
        }

    }
}
